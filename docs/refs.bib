
@book{png2013managerial,
  title={Managerial economics},
  author={Png, Ivan},
  year={2013},
  publisher={Routledge},
  pages={101--118}
}
@book{salomaa2013public,
  title={Public-key cryptography},
  author={Salomaa, Arto},
  year={2013},
  publisher={Springer Science \& Business Media}
}
@book{fielding2000architectural,
  title={Architectural styles and the design of network-based software architectures},
  author={Fielding, Roy T and Taylor, Richard N},
  volume={7},
  year={2000},
  publisher={University of California, Irvine Doctoral dissertation}
}
@inproceedings{lau2000distributed,
  title={Distributed denial of service attacks},
  author={Lau, Felix and Rubin, Stuart H and Smith, Michael H and Trajkovic, Ljiljana},
  booktitle={Systems, Man, and Cybernetics, 2000 IEEE International Conference on},
  volume={3},
  pages={2275--2280},
  year={2000},
  organization={IEEE}
}
@article{dierks1999rfc,
  title={Rfc 2246: The tls protocol},
  author={Dierks, Tim and Allen, Christopher},
  journal={IETF, January},
  year={1999}
}
@incollection{desmedt2011man,
  title={Man-in-the-middle attack},
  author={Desmedt, Yvo},
  booktitle={Encyclopedia of cryptography and security},
  pages={759--759},
  year={2011},
  publisher={Springer}
}
@book{gray1992transaction,
  title={Transaction processing: concepts and techniques},
  author={Gray, Jim and Reuter, Andreas},
  year={1992},
  publisher={Elsevier}
}
@inproceedings{brewer2000towards,
  title={Towards robust distributed systems},
  author={Brewer, Eric A},
  booktitle={PODC},
  volume={7},
  year={2000}
}
@incollection{kart2009managing,
  title={Managing and Integrating Demand and Supply Using Web Services and the Service Oriented Architecture},
  author={Kart, Firat and Moser, Louise E and Melliar-Smith, PM},
  booktitle={Supply Chain the Way to Flat Organisation},
  year={2009},
  publisher={InTech}
}
@inproceedings{luu2016secure,
  title={A secure sharding protocol for open blockchains},
  author={Luu, Loi and Narayanan, Viswesh and Zheng, Chaodong and Baweja, Kunal and Gilbert, Seth and Saxena, Prateek},
  booktitle={Proceedings of the 2016 ACM SIGSAC Conference on Computer and Communications Security},
  pages={17--30},
  year={2016},
  organization={ACM}
}
@inproceedings{decker2015fast,
  title={A fast and scalable payment network with bitcoin duplex micropayment channels},
  author={Decker, Christian and Wattenhofer, Roger},
  booktitle={Symposium on Self-Stabilizing Systems},
  pages={3--18},
  year={2015},
  organization={Springer}
}
@inproceedings{fonseca2007x,
  title={X-trace: A pervasive network tracing framework},
  author={Fonseca, Rodrigo and Porter, George and Katz, Randy H and Shenker, Scott and Stoica, Ion},
  booktitle={Proceedings of the 4th USENIX conference on Networked systems design \& implementation},
  pages={20--20},
  year={2007},
  organization={USENIX Association}
}
@inproceedings{mace2015pivot,
  title={Pivot tracing: Dynamic causal monitoring for distributed systems},
  author={Mace, Jonathan and Roelke, Ryan and Fonseca, Rodrigo},
  booktitle={Proceedings of the 25th Symposium on Operating Systems Principles},
  pages={378--393},
  year={2015},
  organization={ACM}
}

@misc{ web1,
    title = "Survey: in a {DevOps} world, microservices rule.",
    author={McKendrick, Joe},
    howpublished = "\url{http://www.zdnet.com/article/survey-of-2000-java-and-scala-developers-reveals-shake-up-in-enterprise-application-architecture/}",
    note = "[Online; accessed 23-11-17]"
}
@misc{ web2,
    title = "Microservices",
    author={Lewis, James and Fowler, Martin},
    howpublished = "\url{https://martinfowler.com/articles/microservices.html}",
    note = "[Online; accessed 23-11-17]"
}
@misc{ web3,
    title = "Business Dictionary. 'Profit Orientation'.",
    key = "Business Dictionary. 'Profit Orientation'.",
    howpublished = "\url{http://www.businessdictionary.com/definition/profit-orientation.html}",
    note = "[Online; accessed 28-11-17]"
}
@misc{ web5,
    title = "Blockchain technology: 9 benefits \& 7 challenges.",
    key = "Blockchain technology: 9 benefits \& 7 challenges.",
    howpublished = "\url{https://blog.deloitte.com.ng/blockchain-technology-benefits-challenges/}",
    note = "[Online; accessed 4-11-17]"
}
@misc{ web7,
    title = "Ethereum White Paper.",
    key = "Ethereum White Paper.",
    howpublished = "\url{https://github.com/ethereum/wiki/wiki/White-Paper}",
    note = "[Online; accessed 16-12-17]"
}
@misc{ web8,
    title = "Ethereum Vs Bitcoin: What's The Main Difference?.",
    author={Rosic, Ameer},
    howpublished = "\url{http://www.huffingtonpost.com/ameer-rosic-/ethereum-vs-bitcoin-whats\_b\_13735404.html}",
    note = "[Online; accessed 09-11-17]"
}
@misc{ web9,
    title = "Transactions and Smart Contracts",
    author={van Rijmenam, Mark},
    howpublished = "\url{https://datafloq.com/read/what-is-blockchain-transactions-smart-contracts/2449}",
    note = "[Online; accessed 09-11-17]"
}
@misc{ web11,
    title = "Ethereum Transaktionsgebuehr.",
    key = "Ethereum Transaktionsgebuehr.",
howpublished = "\url{https://bitinfocharts.com/de/comparison/ethereum-transactionfees.html}",
    note = "[Online; accessed 04-02-18]"
}
@misc{ web12,
    title = "Ethereum Average BlockTime Chart.",
    key = "Ethereum Average BlockTime Chart.",
howpublished = "\url{https://etherscan.io/chart/blocktime }",
    note = "[Online; accessed 02-02-18]"
}
@misc{ web13,
    title = "State Channels",
    author={Coleman, Jeff},
    howpublished = "\url{http://www.jeffcoleman.ca/state-channels/}",
    note = "[Online; accessed 23-11-17]"
}
@misc{ web14,
    title = "Node.js.",
    key = "Node.js.",
    howpublished = "\url{https://nodejs.org/en/}",
    note = "[Online; accessed 02-02-18]"
}
@misc{ web17,
    title = "Raiden Network.",
    key = "Raiden Network.",
    howpublished = "\url{http://raiden.network/}",
    note = "[Online; accessed 09-11-17]"
}
@misc{ web18,
    title = "The bitcoin lightning network: Scalable off-chain instant payments.",
    author={Poon, J., Dryja, T.},
    howpublished = "\url{https://lightning.network}",
    note = "[Online; accessed 23-11-17]"
}
@misc{ web20,
    title = "Intel {SGX}.",
    key = "Intel {SGX}.",
    howpublished = "\url{https://software.intel.com/en-us/sgx}",
    note = "[Online; accessed 02-02-18]"
}
@misc{ web21,
    title = "Windows 10 Device Guard and Credential Guard Demystified",
    author={de Zylva, Ash},
    howpublished = "\url{https://blogs.technet.microsoft.com/ash/2016/03/02/windows-10-device-guard-and-credential-guard-demystified/}",
    note = "[Online; accessed 02-02-18]"
}
@misc{ web22,
    title = "CryptoCurrency Market Capitalizations.",
    key = "CryptoCurrency Market Capitalizations.",
    howpublished = "\url{https://coinmarketcap.com}",
    note = "[Online; accessed 02-02-18]"
}
@misc{ web23,
    title = "{JSON} {RPC} {API}.",
    key = "{JSON} {RPC} {API}.",
    howpublished = "\url{https://github.com/ethereum/wiki/wiki/JSON-RPC}",
    note = "[Online; accessed 02-02-18]"
}
@misc{ web24,
    title = "Web3.js",
    key = "Web3.js",
    howpublished = "\url{https://github.com/ethereum/web3.js/}",
    note = "[Online; accessed 02-02-18]"
}
@misc{ web25,
    title = "{TypeScript}",
    key = "{TypeScript}",
    howpublished = "\url{https://www.typescriptlang.org}",
    note = "[Online; accessed 02-02-18]"
}
@misc{ web27,
    title = "Attacker has a lot of computing power.",
    key = "Attacker has a lot of computing power.",
    howpublished = "\url{https://en.bitcoin.it/wiki/Weaknesses\#Attacker\_has\_a\_lot\_of\_computing\_power}",
    note = "[Online; accessed 02-02-18]"
}
@misc{ web31,
    title = "Geth.",
    key = "Geth.",
    howpublished = "\url{https://github.com/ethereum/go-ethereum}",
    note = "[Online; accessed 02-02-18]"
}
@misc{ web32,
    title = "{TestRPC}.",
    key = "{TestRPC}.",
    howpublished = "\url{https://github.com/ethereumjs/testrpc}",
    note = "[Online; accessed 02-02-18]"
}
@misc{ web33,
    title = "Docker.",
    key = "Docker.",
    howpublished = "\url{https://www.docker.com}",
    note = "[Online; accessed 02-02-18]"
}
@misc{ web34,
    title = "Docker Compose.",
    key = "Docker Compose.",
    howpublished = "\url{https://docs.docker.com/compose/}",
    note = "[Online; accessed 02-02-18]"
}
@misc{ web35,
    title = "Redis.",
    key = "Redis.",
    howpublished = "\url{https://redis.io}",
    note = "[Online; accessed 02-02-18]"
}
@misc{ web36,
    title = "React - a javascript library for building user interfaces.",
    key = "React - a javascript library for building user interfaces.",
    howpublished = "\url{https://facebook.github.io/react/}",
    note = "[Online; accessed 02-02-18]"
}
@misc{ web37,
    title = "Redux.",
    key = "Redux.",
    howpublished = "\url{http://redux.js.org}",
    note = "[Online; accessed 02-02-18]"
}
@misc{ web38,
    title = "Web Services {AWS}.",
    key = "Web Services {AWS}.",
    howpublished = "\url{https://aws.amazon.com/de/}",
    note = "[Online; accessed 02-02-18]"
}
@misc{ web39,
    title = "Amazon {EC2} Container Service.",
    key = "Amazon {EC2} Container Service.",
    howpublished = "\url{https://aws.amazon.com/de/ecs/}",
    note = "[Online; accessed 02-02-18]"
}
@misc{ awsec2,
    title = "Amazon {EC2}",
    key = "Amazon {EC2}",
    howpublished = "\url{https://aws.amazon.com/de/ec2/}",
    note = "[Online; accessed 17-03-18]"
}
@misc{ web40,
    title = "The {NIST} Definition of Cloud Computing.",
    key = "The {NIST} Definition of Cloud Computing.",
    howpublished = "\url{http://nvlpubs.nist.gov/nistpubs/Legacy/SP/nistspecialpublication800-145.pdf}",
    note = "[Online; accessed 23-11-17]"
}
@misc{ web41,
    title = "{AWS} {X}-{Ray}.",
    key = "AWS X-Ray.",
    howpublished = "\url{https://aws.amazon.com/de/xray/}",
    note = "[Online; accessed 20-12-17]"
}
@misc{ web47,
    title = "Proof of Work vs Proof of Stake: Basic Mining Guide.",
    author={Rosic, Ameer},
    howpublished = "\url{https://blockgeeks.com/guides/proof-of-work-vs-proof-of-stake/}",
    note = "[Online; accessed 20-12-17]"
}
@misc{ web48,
    title = "What is Proof-of-Authority consensus?",
    author={Prusty, Narayan},
    howpublished = "\url{https://www.safaribooksonline.com/library/view/building-blockchain-projects/9781787122147/827f4856-1b32-4a10-a53a-e02050f74a15.xhtml}",
    note = "[Online; accessed 20-12-17]"
}
@misc{ web52,
    title = "The Solidity Contract-Oriented Programming Language.",
    key = "The Solidity Contract-Oriented Programming Language.",
    howpublished = "\url{https://github.com/ethereum/solidity}",
    note = "[Online; accessed 22-11-17]"
}
@misc{ web53,
    title = "{RFC} 4122: A Universally Unique Identifier (UUID) URN Namespace, 2005.",
    author={Leach, P., M. Mealling, and R. Salz},
    howpublished = "\url{http://www.ietf.org/rfc/rfc4122.txt.}",
    note = "[Online; accessed 22-11-17.]"
}
@misc{ web54,
    title = "Apache Bench",
    key = "Apache Bench",
    howpublished = "\url{https://httpd.apache.org/docs/2.4/programs/ab.html}",
    note = "[Online; accessed 28-12-17]"
}
@misc{ web55,
    title = "Node Webworker Threads.",
    key = "Node Webworker Threads.",
    howpublished = "\url{https://github.com/audreyt/node-webworker-threads}",
    note = "[Online; accessed 30-12-17]"
}
@misc{ web56,
    title = "Ethereum Alarm Clock 1.0.0 documentation.",
    key = "Ethereum Alarm Clock 1.0.0 documentation.",
    howpublished = "\url{http://docs.Ethereum-alarm-clock.com/en/latest/}",
    note = "[Online; accessed 1-11-17]"
}
@misc{ web57,
    title = "The Node.js Event Loop, Timers, and process.nextTick().",
    key = "The Node.js Event Loop, Timers, and process.nextTick().",
    howpublished = "\url{https://nodejs.org/en/docs/guides/event-loop-timers-and-nexttick/}",
    note = "[Online; accessed 30-12-17]"
}
@misc{ web58,
    title = "Salesforce force.com.",
    key = "Salesforce force.com.",
    howpublished = "\url{https://developer.salesforce.com/platform/force.com}",
    note = "[Online; accessed 17-03-18]"
}
@misc{ web59,
    title = "{YaaS} - {SAP} Hybris as a Service.",
    key = "YaaS - SAP Hybris as a Service.",
    howpublished = "\url{https://www.yaas.io}",
    note = "[Online; accessed 29-11-17]"
}
@misc{ web64,
    title = "{WSDL}",
    key = "WSDL",
    howpublished = "\url{https://www.w3.org/TR/wsdl.html}",
    note = "[Online; accessed 04-11-17]"
}
@misc{ web68,
    title = {Drogen, Paranoia, Internet - der Online-Schwarzmarkt Silk Road. Sueddeutsche Zeitung.},
    key = "Drogen, Paranoia, Internet - der Online-Schwarzmarkt Silk Road. Sueddeutsche Zeitung.",
    howpublished = "\url{http://www.sueddeutsche.de/digital/media-player-digitale-schattengewaechse-1.2964140}",
    note = "[Online; accessed 02-02-18]"
}
@misc{ web83,
    title = "Bitcoin Cash",
    key = "Bitcoin Cash",
    howpublished = "\url{https://www.bitcoincash.org}",
    note = "[Online; accessed 05-11-17]"
}
@misc{ web89,
    title = "Hyperledger - Blockchain Technologies for Business",
    key = "Hyperledger - Blockchain Technologies for Business",
    howpublished = "\url{www.hyperledger.org}",
    note = "[Online; accessed 05-11-17]"
}
@misc{ web91,
    title = "How to set up a private Ethereum testnet blockchain using Geth and Homebrew.",
    author={Willems, Lander},
    howpublished = "\url{https://medium.com/@WWWillems/how-to-set-up-a-private-ethereum-testnet-blockchain-using-geth-and-homebrew-1106a27e8e1e}",
    note = "[Online; accessed 29-10-17]"
}
@misc{ web96,
    title = "Amazon {EC2} Spot-Instances",
    key = "Amazon {EC2} Spot-Instances",
    howpublished = "\url{https://aws.amazon.com/de/ec2/spot/}",
    note = "[Online; accessed 30-10-17]"
}
@misc{ web97,
    title = "{ImmobilienScout24}",
    key = "ImmobilienScout24",
    howpublished = "\url{https://www.immobilienscout24.de/unternehmen/immobilienscout24.html}",
    note = "[Online; accessed 30-10-17]"
}
@misc{ web102,
    title = "Zipkin.",
    key = "Zipkin.",
    howpublished = "\url{http://zipkin.io}",
    note = "[Online; accessed 4-11-17]"
}
@article{Villamizar2017,
abstract = {{\textcopyright} 2017, Springer-Verlag London.Large Internet companies like Amazon, Netflix, and LinkedIn are using the microservice architecture pattern to deploy large applications in the cloud as a set of small services that can be independently developed, tested, deployed, scaled, operated, and upgraded. However, aside from gaining agility, independent development, and scalability, how microservices affect the infrastructure costs is a major evaluation topic for companies adopting this pattern. This paper presents a cost comparison of a web application developed and deployed using the same scalable scenarios with three different approaches: 1) a monolithic architecture, 2) a microservice architecture operated by the cloud customer, and 3) a microservice architecture operated by the cloud provider. Test results show that microservices can help reduce infrastructure costs in comparison with standard monolithic architectures. Moreover, the use of services specifically designed to deploy and scale microservices, such as AWS Lambda, reduces infrastructure costs by 70{\%} or more, and unlike microservices operated by cloud customers, these specialized services help to guarantee the same performance and response times as the number of users increases. Lastly, we also describe the challenges we faced while implementing and deploying microservice applications, and include a discussion on how to replicate the results on other cloud providers.},
author = {Villamizar, Mario and Garc{\'{e}}s, Oscar and Ochoa, Lina and Castro, Harold and Salamanca, Lorena and Verano, Mauricio and Casallas, Rubby and Gil, Santiago and Valencia, Carlos and Zambrano, Angee and Lang, Mery},
doi = {10.1007/s11761-017-0208-y},
file = {:Users/fgoessler/Downloads/10.1007-s11761-017-0208-y.pdf:pdf},
isbn = {1863-2386, 1863-2394},
issn = {18632394},
journal = {Service Oriented Computing and Applications},
keywords = {AWS Lambda,Amazon Web Services,Cloud computing,Microservice architecture,Microservices,Scalable applications,Serverless architectures,Service-oriented architectures,Software architecture,Software engineering,tracing},
mendeley-tags = {tracing},
number = {2},
pages = {233--247},
publisher = {Springer London},
title = {{Cost comparison of running web applications in the cloud using monolithic, microservice, and AWS Lambda architectures}},
volume = {11},
year = {2017}
}
@article{Sharma2012,
abstract = {In this study, we design, develop, and simulate a cloud resources pricing model that satisfies two important constraints: the dynamic ability of the model to provide a high satisfaction guarantee measured as Quality of Service (QoS) - from users perspectives, profitability constraints - from the cloud service providers perspectivesWe employ financial option theory and treat the cloud resources as underlying assets to capture the realistic value of the cloud compute commodities (C3). We then price the cloud resources using our model. We discuss the results for four different metrics that we introduce to guarantee the quality of service and price as follows: (a) Moore's law based depreciation of asset values;(b) new technology based volatility measures in capturing price changes; (c) a new financial option pricing based model combining the above two concepts; and (d) the effect of age of resources and depreciation of cloud resource on QoS. We show that the cloud parameters can be mapped to financial economic model and we discuss the results of cloud compute commodity pricing for various parameters, such as the age of the resource, quality of service, and contract period.},
author = {Sharma, Bhanu and Thulasiram, Ruppa K. and Thulasiraman, Parimala and Garg, Saurabh K. and Buyya, Rajkumar},
doi = {10.1109/CCGrid.2012.126},
file = {:Users/fgoessler/Downloads/06217453.pdf:pdf},
isbn = {9780769546919},
journal = {Proceedings - 12th IEEE/ACM International Symposium on Cluster, Cloud and Grid Computing, CCGrid 2012},
keywords = {Cloud Resources Pricing,Depreciation of Resources,Financial Economic Model,Profit,Quality of Service,tracing},
mendeley-tags = {tracing},
pages = {451--457},
title = {{Pricing cloud compute commodities: A novel financial economic model}},
year = {2012}
}
@article{Nguyen,
author = {Nguyen, Tuan and Pandey, Manish},
file = {:Users/fgoessler/Downloads/manish{\_}pandey.pdf:pdf},
keywords = {tracing},
mendeley-tags = {tracing},
title = {{Dprof - Distributed System Profiling and Tracing}}
}
@article{Leitner2016,
abstract = {We present an approach to model the deployment costs, includ- ing compute and IO costs, of Microservice-based applications de- ployed to a public cloud. Our model, which we dubbed CostHat, supports both, Microservices deployed on traditional IaaS or PaaS clouds, and services that make use of novel cloud programming paradigms, such as AWS Lambda. CostHat is based on a net- work model, and allows for what-if and cost sensitivity analysis. Further, we have used this model to implement tooling that warns cloud developers directly in the Integrated Development Environ- ment (IDE) about certain classes of potentially costly code changes. We illustrate our work based on a case study, and evaluate the CostHat model using a standalone Python implementation. We show that, once instantiated, cost calculation in CostHat is compu- tationally inexpensive on standard hardware (below 1 ms even for applications consisting of thousand services and endpoints). This enables its use in real-time for developer tooling which continually re-evaluates the costs of an application in the background, while the developer is working on the code.},
author = {Leitner, Philipp and Cito, J{\"{u}}rgen and St{\"{o}}ckli, Emanuel},
doi = {10.1145/2996890.2996901},
file = {:Users/fgoessler/Downloads/p165-leitner.pdf:pdf},
isbn = {9781450346160},
journal = {Proceedings of the 9th International Conference on Utility and Cloud Computing - UCC '16},
keywords = {cloud computing, microservices, deployment costs,,tracing},
mendeley-tags = {tracing},
pages = {165--174},
title = {{Modelling and managing deployment costs of microservice-based cloud applications}},
url = {http://dl.acm.org/citation.cfm?doid=2996890.2996901},
year = {2016}
}
@article{Sigelman2010,
abstract = {Modern Internet services are often implemented as complex, large-scale distributed systems. These applications are constructed from collections of software modules that may be developed by different teams, perhaps in different programming languages, and could span many thousands of machines across multiple physical facilities. Tools that aid in understanding system behavior and reasoning about performance issues are invaluable in such an environment. Here we introduce the design of Dapper, Googles production distributed systems tracing infrastructure, and describe how our design goals of low overhead, application-level transparency, and ubiquitous deployment on a very large scale system were met. Dapper shares conceptual similarities with other tracing systems, particularly Magpie 3 and X-Trace 12, but certain design choices were made that have been key to its success in our environment, such as the use of sampling and restricting the instrumentation to a rather small number of common libraries. The main goal of this paper is to report on our experience building, deploying and using the system for over two years, since Dappers foremost measure of success has been its usefulness to developer and operations teams. Dapper began as a self-contained tracing tool but evolved into a monitoring platform which has enabled the creation of many different tools, some of which were not anticipated by its designers. We describe a few of the analysis tools that have been built using Dapper, share statistics about its usage within Google, present some example use cases, and discuss lessons learned so far.},
author = {Sigelman, Benjamin H and Andr, Luiz and Burrows, Mike and Stephenson, Pat and Plakal, Manoj and Beaver, Donald and Jaspan, Saul and Shanbhag, Chandan},
doi = {dapper-2010-1},
file = {:Users/fgoessler/Downloads/dapper-a-large-scale-distributed-tracing-infrastructure.pdf:pdf},
issn = {{\textless}null{\textgreater}},
journal = {Google Research},
keywords = {tracing},
mendeley-tags = {tracing},
number = {April},
pages = {14},
title = {{Dapper , a Large-Scale Distributed Systems Tracing Infrastructure}},
url = {https://static.googleusercontent.com/media/research.google.com/en//pubs/archive/36356.pdf},
year = {2010}
}
@article{Jennings2015,
abstract = {Resource management in a cloud environment is a hard problem, due to: the scale of modern data centers; the heterogeneity of resource types and their interdependencies; the variability and unpredictability of the load; as well as the range of objectives of the different actors in a cloud ecosystem. Consequently, both academia and industry began significant research efforts in this area. In this paper, we survey the recent literature, covering 250+ publications, and highlighting key results. We outline a conceptual framework for cloud resource management and use it to structure the state-of-the-art review. Based on our analysis, we identify five challenges for future investigation. These relate to: providing predictable performance for cloud-hosted applications; achieving global manageability for cloud systems; engineering scalable resource management systems; understanding economic behavior and cloud pricing; and developing solutions for the mobile cloud paradigm.},
author = {Jennings, Brendan and Stadler, Rolf},
doi = {10.1007/s10922-014-9307-7},
file = {:Users/fgoessler/Downloads/10.1007-s10922-014-9307-7.pdf:pdf},
isbn = {1064-7570},
issn = {10647570},
journal = {Journal of Network and Systems Management},
keywords = {Cloud computing,Resource allocation,Resource management,Survey,Virtualization,tracing},
mendeley-tags = {tracing},
number = {3},
pages = {567--619},
publisher = {Springer US},
title = {{Resource Management in Clouds: Survey and Research Challenges}},
url = {http://dx.doi.org/10.1007/s10922-014-9307-7},
volume = {23},
year = {2015}
}
@article{Birk2016,
abstract = {Microservices haben in den letzten Jahren einen Hype erfahren und gelten momentan als der Stil, der es einem Unternehmen erlaubt, m{\"{o}}glichst agil und innovativ in der Entwicklung von Software zu sein. Durch die Entkopplung von fachlich nur wenig zusammenh{\"{a}}ngenden Teilen zu eigenst{\"{a}}ndigen Microservices, kann eine Unterteilung der Entwicklung in hochgradig autonome Teams erreicht werden. Zus{\"{a}}tzlich unterst{\"{u}}tzen Cloud-Technologien und Automatisierung durch Continuous Delivery und DevOps die Teams bei der schnellen Weiterentwicklung ihres abgegrenzten Bereiches und erlaubt es diesen, selbst{\"{a}}ndig f{\"{u}}r den Betrieb ihrer Microservices verantwortlich zu sein. Der Begriff Microservices ist noch relativ jung und zeigt sich in unterschiedlichen Formen, weshalb oft unklar ist, was er eigentlich genau bedeutet. Daraus ergeben sich auch Schwierigkeiten in der Abgrenzung zu anderen Ans{\"{a}}tzen wie SOA. Der Ansatz, Software durch Services zu modularisieren, ist nicht neu und wird schon bei SOA angewendet, um die Integration verschiedener Systeme zu erleichtern und diese schneller an ver{\"{a}}nderte Gesch{\"{a}}ftsprozesse anzupassen. Obwohl Microservices aus SOA heraus entstanden sind, fokussiert der Stil mehr auf die Flexibilit{\"{a}}t und Geschwindigkeit bei der Entwicklung von modernen Online-Softwaresystemen und setzt Service-Orientierung anders um als es bei SOA der Fall ist. Diese Arbeit erfasst das Themengebiet unterteilt in Stil-Ebene, Architektur-Ebene und Service-Ebene. Sie versucht so, dabei zu helfen, mehr Verst{\"{a}}ndnis {\"{u}}ber den Begriff Microservices zu erlangen. Dabei werden angrenzende Konzepte sowie Technologien erkl{\"{a}}rt und anhand von Charakteristiken beschrieben, was den Microservices-Stil ausmacht. {\"{U}}ber ver{\"{o}}ffentlichte Berichte und Konferenzvortr{\"{a}}ge von Unternehmen, die nach eigenen Angaben Microservices umsetzen, werden typische Gr{\"{u}}nde und Motivationen f{\"{u}}r den Microservice-Stil herausgearbeitet. Zuletzt wird SOA kurz definiert und anhand dem aktuellen Verst{\"{a}}ndnis eingef{\"{u}}hrt. Mit den erlangten Kenntnissen {\"{u}}ber Microservices und deren Motivation, wird ein Vergleich mit SOA auf den verschiedenen Ebenen unternommen.},
author = {Birk, Ferdinand},
file = {:Users/fgoessler/Downloads/BA{\_}BIR{\_}2016.pdf:pdf},
keywords = {microservice,soa},
mendeley-tags = {microservice,soa},
title = {{Eine State-of-the-Art Bestandsaufnahme und Abgrenzung zu SOA}},
url = {http://dbis.eprints.uni-ulm.de/1460/1/BA{\_}BIR{\_}2016.pdf},
year = {2016}
}
@article{Kumar2017,
author = {Kumar, Ravindra},
file = {:Users/fgoessler/Downloads/IJARI-CS-17-06-105.pdf:pdf},
keywords = {cloud computing},
number = {2},
pages = {199--203},
title = {{Software as a Service ( SAAS ), Future of Information Technology {\&} Business}},
volume = {5},
year = {2017}
}
@article{Weissman2009,
author = {Weissman, Craig D},
file = {:Users/fgoessler/Downloads/0d71111787a85260f5146ee6ee5232f7b117.pdf:pdf},
isbn = {9781605585512},
keywords = {a multitenant application shares,a single stack of,domain specific,figure 1,flex schema,language,multi-tenancy,object-relational mapping,query optimization},
pages = {889--896},
title = {{The Design of the Force . com Multitenant Internet Application Development Platform}},
year = {2009}
}
@article{Cusumano2010,
archivePrefix = {arXiv},
arxivId = {1003.4074},
author = {Cusumano, Michael},
doi = {10.1145/1721654.1721667},
eprint = {1003.4074},
file = {:Users/fgoessler/Downloads/p27-cusumano.pdf:pdf},
isbn = {0001-0782 U6 - ctx{\_}ver=Z39.88-2004{\&}ctx{\_}enc=info{\%}3Aofi{\%}2Fenc{\%}3AUTF-8{\&}rfr{\_}id=info:sid/summon.serialssolutions.com{\&}rft{\_}val{\_}fmt=info:ofi/fmt:kev:mtx:journal{\&}rft.genre=article{\&}rft.atitle=Cloud+computing+and+SaaS+as+new+computing+platforms{\&}rft.jtitle=Communications+of+the+ACM{\&}rft.au=Cusumano{\%}2C+Michael{\&}rft.date=2010-04-01{\&}rft.pub=ACM{\&}rft.issn=0001-0782{\&}rft.volume=53{\&}rft.issue=4{\&}rft.spage=27{\&}rft.epage=29{\&}rft{\_}id=info:doi/10.1145{\%}2F1721654.1721667{\&}rft.externalDocID=1721667 U7 - Journal Article U8 - FETCH},
issn = {00010782},
journal = {Communications of the ACM},
keywords = {market,microservice},
mendeley-tags = {market,microservice},
number = {4},
pages = {27},
pmid = {19435745},
title = {{Cloud computing and SaaS as new computing platforms}},
url = {http://portal.acm.org/citation.cfm?doid=1721654.1721667},
volume = {53},
year = {2010}
}
@article{Lamport1982,
abstract = {Reliable computer systems must handle malfunctioning components that give conflicting information to different parts of the system. This situation can be expressed abstractly in terms of a group of generals of the Byzantine army camped with their troops around an enemy city. Communicating only by messenger, the generals must agree upon a common battle plan. However, one of more of them may be traitors who will try to confuse the others. The problem is to find an algorithm to ensure that the loyal generals will reach agreement. It is shown that, using only oral messages, this problem is solvable if and only if more than two-thirds of the generals are loyal; so a single traitor can confound two loyal generals. With unforgeable written messages, the problem is solvable for any number of generals and possible traitors. Applications of the solutions to reliable computer systems are then discussed.},
archivePrefix = {arXiv},
arxivId = {arXiv:1011.1669v3},
author = {Lamport, Leslie and Shostak, Robert and Pease, Marshall},
doi = {10.1145/357172.357176},
eprint = {arXiv:1011.1669v3},
file = {:Users/fgoessler/Downloads/p382-lamport-2.pdf:pdf},
isbn = {0164-0925},
issn = {01640925},
journal = {ACM Transactions on Programming Languages and Systems},
keywords = {byzantine,security},
mendeley-tags = {byzantine,security},
number = {3},
pages = {382--401},
pmid = {25246403},
title = {{The Byzantine Generals Problem}},
url = {http://portal.acm.org/citation.cfm?doid=357172.357176},
volume = {4},
year = {1982}
}
@article{Vukoli2016,
author = {Vukoli, Marko},
doi = {10.1007/978-3-319-39028-4},
file = {:Users/fgoessler/Downloads/10.1007-978-3-319-39028-4{\_}9.pdf:pdf},
isbn = {978-3-319-39027-7},
keywords = {bitcoin,blockchain,byzantine,byzantine fault tolerance,proof-of-work,scalability,scaling,state machine replication,sus},
mendeley-tags = {blockchain,byzantine,scaling},
pages = {112--125},
title = {{The Quest for Scalable Blockchain Fabric: Proof-of-Work vs. BFT Replication}},
url = {http://link.springer.com/10.1007/978-3-319-39028-4},
volume = {9591},
year = {2016}
}
@article{Croman2017,
archivePrefix = {arXiv},
arxivId = {arXiv:1311.0243},
author = {Croman, Kyle and B, Christian Decker and Eyal, Ittay and Gencer, Adem Efe and Juels, Ari and Kosba, Ahmed and Miller, Andrew and Saxena, Prateek and Song, Dawn and Wattenhofer, Roger},
doi = {10.1007/978-3-662-54970-4},
eprint = {arXiv:1311.0243},
file = {:Users/fgoessler/Downloads/10.1007-978-3-662-53357-4{\_}8.pdf:pdf},
isbn = {978-3-662-54969-8},
issn = {0302-9743},
keywords = {blockchain,scaling},
mendeley-tags = {blockchain,scaling},
pages = {106--125},
pmid = {4520227},
title = {{On Scaling Decentralized Blockchains}},
url = {http://link.springer.com/10.1007/978-3-662-54970-4},
volume = {9603},
year = {2017}
}
@article{Giaglis2002,
author = {Giaglis, George M. and Klein, Stefan and O'Keefe, Robert M.},
doi = {10.1046/j.1365-2575.2002.00123.x},
file = {:Users/fgoessler/Downloads/j.1365-2575.2002.00123.x.pdf:pdf},
isbn = {13501917 (ISSN)},
issn = {13501917},
journal = {Information Systems Journal},
keywords = {Contingency model,Disintermediation,Economics,Electronic commerce,Electronic markets,market},
mendeley-tags = {market},
number = {3},
pages = {231--246},
pmid = {21468942},
title = {{The role of intermediaries in electronic marketplaces: Developing a contingency model}},
volume = {12},
year = {2002}
}
@article{Gencer2017,
abstract = {The rise of blockchain-based cryptocurrencies has led to an explosion of services using distributed ledgers as their underlying infra-structure. However, due to inherently single-service oriented blockchain protocols, such services can bloat the existing ledgers, fail to provide suf-ficient security, or completely forego the property of trustless auditability. Security concerns, trust restrictions, and scalability limits regarding the resource requirements of users hamper the sustainable development of loosely-coupled services on blockchains. This paper introduces Aspen, a sharded blockchain protocol designed to securely scale with increasing number of services. Aspen shares the same trust model as Bitcoin in a peer-to-peer network that is prone to extreme churn containing Byzantine participants. It enables introduction of new services without compromising the security, leveraging the trust assumptions, or flooding users with irrelevant messages.},
author = {Gencer, Adem Efe and Van, Robbert and Emin, Renesse and Sirer, G{\"{u}}n},
file = {:Users/fgoessler/Dropbox/{\_}Masterthesis/Papers/ShortPaperSharding.pdf:pdf},
journal = {Financial Cryptography and Data Security 2017},
keywords = {blockchain,scaling,sharding},
mendeley-tags = {blockchain,scaling,sharding},
title = {{Short Paper: Service-Oriented Sharding for Blockchains}},
url = {http://fc17.ifca.ai/program.html},
year = {2017}
}
@article{iansiti2017truth,
  title={The truth about blockchain},
  author={Iansiti, Marco and Lakhani, Karim R},
  journal={Harvard Business Review},
  volume={95},
  number={1},
  pages={118--127},
  year={2017}
}
@inproceedings{kuhlenkamp2017costradamus,
  title={Costradamus: A Cost-Tracing System for Cloud-Based Software Services},
  author={Kuhlenkamp, Joern and Klems, Markus},
  booktitle={International Conference on Service-Oriented Computing},
  pages={657--672},
  year={2017},
  organization={Springer}
}
@article{Tai2017,
abstract = {{\textcopyright}2017 by SCITEPRESS - Science and Technology Publications, Lda. All rights reserved. Traditional ACID transactions, typically supported by relational database management systems, emphasize database consistency. BASE provides a model that trades some consistency for availability, and is typically favored by cloud systems and NoSQL data stores. With the increasing popularity of blockchain technology, another alternative to both ACID and BASE is introduced: SALT. In this keynote paper, we present SALT as a model to explain blockchains and their use in application architecture. We take both, a transaction and a transaction processing systems perspective on the SALT model. From a transactions perspective, SALT is about Sequential, Agreed-on, Ledgered, and Tamper-resistant transaction processing. From a systems perspective, SALT is about decentralized transaction processing systems being Symmetric, Admin-free, Ledgered and Time-consensual. We discuss the importance of these dual perspectives, both, when comparing SALT with ACID and BASE, and when engineering blockchain-based applications. We expect the next-generation of decentralized transactional applications to leverage combinations of all three transaction models.},
author = {Tai, S. and Eberhardt, J. and Klems, M.},
doi = {10.5220/0006408207550764},
file = {:Users/fgoessler/Dropbox/{\_}Masterthesis/Papers/2017-tai-eberhardt-klems-SALT.pdf:pdf},
isbn = {9789897582431},
journal = {CLOSER 2017 - Proceedings of the 7th International Conference on Cloud Computing and Services Science},
keywords = {ACID,BASE,Blockchain,Decentralized,SALT,Transaction processing,blockchain},
mendeley-tags = {blockchain},
title = {{Not ACID, not BASE, but SALT: A transaction processing perspective on blockchains}},
year = {2017}
}
@article{Schlauderer2011,
author = {Schlauderer, Sebastian and Overhage, Sven},
file = {:Users/fgoessler/Dropbox/{\_}Masterthesis/Papers/HOW PERFECT ARE MARKETS FOR SOFTWARE SERVICES? AN ECONOMIC PERSPE.pdf:pdf},
journal = {Ecis},
keywords = {economic analysis,market,service markets,service-oriented computing,soa},
mendeley-tags = {market,soa},
title = {{How perfect are markets for software services ? An economic perspective on market features}},
year = {2011}
}
@article{Pongnumkul2017,
abstract = {This paper conducts a performance analysis of two popular private blockchain platforms, Hyperledger Fabric and Ethereum (private deployment), to assess the performance and limitations of these state-of-the-art platforms. Blockchain, a decentralized transaction and data management technology, is said to be the technology that will have similar impacts as the Internet had on people's lives. Many industries have become interested in adopting blockchain in their IT systems, but scala- bility is an often-cited concern of current blockchain technology. Therefore, the goals of this preliminary performance analysis are twofold. First, a methodology for evaluating a blockchain platform is developed. Second, the analysis results are presented to inform practitioners in making decisions regarding adoption of blockchain technology in their IT systems. The experimental results, based on varying number of transactions, show that Hyperledger Fabric consistently outperforms Ethereum across all evaluation metrics which are execution time, latency and throughput. Additionally, both platforms are still not competitive with current database systems in term of performances in high workload scenarios. I.},
author = {Pongnumkul, Suporn and Siripanpornchana, Chaiyaphum and Thajchayapong, Suttipong},
doi = {10.1109/ICCCN.2017.8038517},
file = {:Users/fgoessler/Dropbox/{\_}Masterthesis/Papers/Performance Analysis of Private Blockchain Platforms in Varying Workloads.pdf:pdf},
isbn = {9781509029914},
journal = {Icccn 2017},
keywords = {Performance Analysis of Private Blockchain Platfor,blockchain,hyperledger,performance,private},
mendeley-tags = {blockchain,hyperledger,performance,private},
title = {{Performance Analysis of Private Blockchain Platforms in Varying Workloads}},
year = {2017}
}
@book{Jackson2005,
archivePrefix = {arXiv},
arxivId = {9780201398298},
author = {Jackson, Mike and Nelson, David and Stirk, Sue},
booktitle = {Lecture Notes in Computer Science},
doi = {10.1007/978-3-642-29066-4{_}11},
eprint = {9780201398298},
file = {:Users/fgoessler/Dropbox/{\_}Masterthesis/Papers/ByzantineFaultTolerance,fromTheorytoRealit.pdf:pdf},
isbn = {978-3-540-71350-0},
issn = {03029743},
keywords = {blockchain,byzantine,security},
mendeley-tags = {blockchain,byzantine,security},
pmid = {4520227},
title = {{Byzantine Fault Tolerance, from Theory to Reality}},
year = {2005}
}
@book{Hartmanis2007a,
annote = {Legner, C.: Is there a market for web services? In: International Conference on Service-Oriented Computing. pp. 29-42. Springer (2007)},
archivePrefix = {arXiv},
arxivId = {9780201398298},
author = {Hartmanis, J and Leeuwen, J Van},
booktitle = {Lecture Notes in Computer Science},
doi = {10.1007/978-3-642-29066-4{_}11},
eprint = {9780201398298},
file = {:Users/fgoessler/Dropbox/{\_}Masterthesis/Papers/SOA.pdf:pdf},
isbn = {9783540751823},
issn = {03029743},
keywords = {market,soa},
mendeley-tags = {market,soa},
pmid = {4520227},
title = {{Is there a market for web services?}},
year = {2007}
}
@phdthesis{worner2017impact,
  title={The Impact of Cryptocurrencies on the Internet of Things-Insights from Prototypes},
  author={Woerner, Dominic},
  year={2017},
  school={ETH Zurich}
}
@article{turner2003turning,
  title={Turning software into a service},
  author={Turner, Mark and Budgen, David and Brereton, Pearl},
  journal={Computer},
  volume={36},
  number={10},
  pages={38--44},
  year={2003},
  publisher={IEEE}
}
@article{Hagstrom2017,
author = {Hagstr{\"{o}}m, Louise and Dahlquist, Olivia},
file = {:Users/fgoessler/Dropbox/{\_}Masterthesis/Papers/FULLTEXT01.pdf:pdf},
keywords = {blockchain,iot,power-grid,scaling},
mendeley-tags = {blockchain,iot,power-grid,scaling},
title = {{Scaling blockchain for the energy sector}},
year = {2017}
}
@article{Sousa2017,
abstract = {Hyperledger Fabric (HLF) is a flexible permissioned blockchain platform designed for business applications beyond the basic digital coin addressed by Bitcoin and other existing networks. A key property of HLF is its extensibility, and in particular the support for multiple ordering services for building the blockchain. Nonetheless, the version 1.0 was launched in early 2017 without an implementation of a Byzantine fault-tolerant (BFT) ordering service. To overcome this limitation, we designed, implemented, and evaluated a BFT ordering service for HLF on top of the BFT-SMaRt state machine replication/consensus library, implementing also optimizations for wide-area deployment. Our results show that HLF with our ordering service can achieve up to ten thousand transactions per second and write a transaction irrevocably in the blockchain in half a second, even with peers spread in different continents.},
archivePrefix = {arXiv},
arxivId = {1709.06921},
author = {Sousa, Jo{\~{a}}o and Bessani, Alysson and Vukoli{\'{c}}, Marko},
eprint = {1709.06921},
file = {:Users/fgoessler/Dropbox/{\_}Masterthesis/Papers/BFT.pdf:pdf},
keywords = {blockchain,byzantine,hyperledger,security},
mendeley-tags = {blockchain,byzantine,hyperledger,security},
number = {Section 4},
title = {{A Byzantine Fault-Tolerant Ordering Service for the Hyperledger Fabric Blockchain Platform}},
url = {http://arxiv.org/abs/1709.06921},
year = {2017}
}
@article{Soska2015,
author = {Soska, Kyle and Christin, Nicolas},
file = {:Users/fgoessler/Dropbox/{\_}Masterthesis/Papers/sec15-paper-soska-updated.pdf:pdf},
isbn = {978-1-931971-232},
journal = {24th USENIX Security Symposium},
keywords = {market},
mendeley-tags = {market},
number = {August},
pages = {33--48},
title = {{Measuring the Longitudinal Evolution of the Online Anonymous Marketplace Ecosystem}},
url = {https://www.usenix.org/conference/usenixsecurity15/technical-sessions/presentation/soska},
year = {2015}
}
@article{Back2014,
abstract = {Since the introduction of Bitcoin[Nak09] in 2009, and the multiple computer science and electronic cash innovations it brought, there has been great interest in the potential of decentralised cryptocurrencies. At the same time, implementation changes to the consensus- critical parts of Bitcoin must necessarily be handled very conservatively. As a result, Bitcoin has greater difficulty than other Internet protocols in adapting to new demands and accommodating new innovation. We propose a new technology, pegged sidechains, which enables bitcoins and other ledger assets to be transferred between multiple blockchains. This gives users access to new and innovative cryptocurrency systems using the assets they already own. By reusing Bitcoin's currency, these systems can more easily interoperate with each other and with Bitcoin, avoiding the liquidity shortages and market fluctuations associated with new currencies. Since sidechains are separate systems, technical and economic innovation is not hindered. Despite bidirectional transferability between Bitcoin and pegged sidechains, they are isolated: in the case of a cryptographic break (or malicious design) in a sidechain, the damage is entirely confined to the sidechain itself. This paper lays out pegged sidechains, their implementation requirements, and the work needed to fully benefit from the future of interconnected blockchains.},
author = {Back, A and Corallo, M and Dashjr, L},
file = {:Users/fgoessler/Dropbox/{\_}Masterthesis/Papers/sidechains.pdf:pdf},
journal = {URL: http://www.},
keywords = {blockchain,scaling,sidechain},
mendeley-tags = {blockchain,scaling,sidechain},
pages = {1--25},
title = {{Enabling blockchain innovations with pegged sidechains}},
url = {http://newspaper23.com/ripped/2014/11/http-{\_}{\_}{\_}{\_}{\_}-{\_}{\_}{\_}-{\_}www{\_}{\_}{\_}-blockstream{\_}{\_}{\_}-com{\_}{\_}-{\_}sidechains.pdf},
year = {2014}
}
@article{Papazoglou2003,
abstract = {Service-oriented computing (SOC) is the computing paradigm that utilizes services as fundamental elements for developing applications/solutions. To build the service model, SOC relies on the service oriented architecture (SOA), which is a way of reorganizing software applications and infrastructure into a set of interacting services. However, the basic SOA does not address overarching concerns such as management, service orchestration, service transaction management and coordination, security, and other concerns that apply to all components in a service architecture. In this paper we introduce an extended service oriented architecture that provides separate tiers for composing and coordinating services and for managing services in an open marketplace by employing grid services.},
author = {Papazoglou, Mike P.},
doi = {10.1109/WISE.2003.1254461},
file = {:Users/fgoessler/Dropbox/{\_}Masterthesis/Papers/SOA-Concepts,CharacteristicsAndDirections.pdf:pdf},
isbn = {0769519997},
issn = {0-7695-1999-7},
journal = {Proceedings - 4th International Conference on Web Information Systems Engineering, WISE 2003},
keywords = {market,soa},
mendeley-tags = {market,soa},
pages = {3--12},
title = {{Service -oriented computing: Concepts, characteristics and directions}},
year = {2003}
}
@article{Egbertsen2016,
abstract = {This research finds out what criteria Ethereum needs to fulfil to replace paper contracts and if it fulfils them. It dives into aspects such as privacy and security of the blockchain and its contracts, and if it is even possible at all to place a contract on the blockchain. However, due to the variety of contract clauses and a large privacy setback, it is not recommended to place paper contracts on the Ethereum blockchain.},
author = {Egbertsen, Wesley and Hardeman, Gerdinand and Hoven, Maarten Van Den and Kolk, Gert Van Der and Rijsewijk, Arthur Van},
file = {:Users/fgoessler/Dropbox/{\_}Masterthesis/Papers/replacing-paper-contracts.pdf:pdf},
keywords = {blockchain,smart contracts},
mendeley-tags = {blockchain,smart contracts},
pages = {1--35},
title = {{Replacing Paper Contracts With Ethereum Smart Contracts}},
year = {2016}
}
@article{Burchert,
author = {Burchert, Conrad and Decker, Christian and Wattenhofer, Roger},
file = {:Users/fgoessler/Dropbox/{\_}Masterthesis/Papers/Scalable{\_}Funding{\_}Of{\_}Blockchain{\_}Micropayment{\_}Networks.pdf:pdf},
keywords = {blockchain,payment channel,scaling,sharding},
mendeley-tags = {blockchain,payment channel,scaling,sharding},
title = {{Scalable Funding of Bitcoin Micropayment Channel Networks Regular Submission}}
}
@inproceedings{burchert2017scalable,
  title={Scalable Funding of Bitcoin Micropayment Channel Networks},
  author={Burchert, Conrad and Decker, Christian and Wattenhofer, Roger},
  booktitle={International Symposium on Stabilization, Safety, and Security of Distributed Systems},
  pages={361--377},
  year={2017},
  organization={Springer}
}
@article{Biryukov2017,
author = {Biryukov, Alex and Khovratovich, Dmitry and Tikhomirov, Sergei},
file = {:Users/fgoessler/Dropbox/{\_}Masterthesis/Papers/Findel{\_}2017-03-08-CR.pdf:pdf},
journal = {1st Workshop on Trusted Smart Contracts},
keywords = {blockchain,domain-specific language,financial engineering,security,smart contracts},
mendeley-tags = {blockchain,security,smart contracts},
title = {{Findel: Secure Derivative Contracts for Ethereum}},
url = {http://fc17.ifca.ai/wtsc/Findel - Secure Derivative Contracts for Ethereum.pdf},
year = {2017}
}
@inproceedings{khalil2017revive,
  title={Revive: Rebalancing Off-Blockchain Payment Networks},
  author={Khalil, Rami and Gervais, Arthur},
  booktitle={Proceedings of the 2017 ACM SIGSAC Conference on Computer and Communications Security},
  pages={439--453},
  year={2017},
  organization={ACM}
}
@article{Li2017,
abstract = {A cadeia de blocos surge como uma ferramenta inovadora que tem a Potencial para impactar positivamente a forma como desenhamos um n{\'{u}}mero Dos aplicativos on-line hoje. Em muitos aspectos, a cadeia de blocos A tecnologia {\'{e}}, no entanto, ainda n{\~{a}}o madura o suficiente para atender Padr{\~{o}}es industriais. Ou seja, tolerante tolerante bizantino As implanta{\c{c}}{\~{o}}es de cadeias de bloco baseadas em permiss{\~{o}}es s{\'{o}} podem ser dimensionadas para Um n{\'{u}}mero limitado de n{\'{o}}s. Esses sistemas normalmente requerem Que todas as transa{\c{c}}{\~{o}}es (e sua ordem de execu{\c{c}}{\~{a}}o) est{\~{a}}o publicamente dispon{\'{i}}veis para todos os n{\'{o}}s do sistema, que vem em Probabilidades com pr{\'{a}}ticas comuns de compartilhamento de dados na ind{\'{u}}stria, E impede que um regulador centralizado supervisione o Sistema blockchain. Neste artigo, propomos uma nova arquitetura de cadeias de blocos Concebido especificamente para atender aos padr{\~{o}}es industriais. Nossa proposta aproveita a no{\c{c}}{\~{a}}o de cadeias de sat{\'{e}}lites que podem primariamente implementar protocolos de consenso diferentes em paralelo. Aumentando consideravelmente as instala{\c{c}}{\~{o}}es de escalabilidade do sistema. Nossa solu{\c{c}}{\~{a}}o tamb{\'{e}}m explica um regulador "m{\~{a}}os-off" Que supervisiona toda a rede, aplica pol{\'{i}}ticas espec{\'{i}}ficas por Meios de contratos inteligentes, etc. Implementamos nossa solu{\c{c}}{\~{a}}o E integrou-o com o Hyperledger Fabric v0.6 [2].},
author = {Li, Wenting and Sforzin, Alessandro and Fedorov, Sergey and Karame, Ghassan O.},
doi = {10.1145/3055518.3055531},
file = {:Users/fgoessler/Dropbox/{\_}Masterthesis/Papers/Scale-SatteliteCHains.pdf:pdf},
isbn = {9781450349741},
journal = {Proceedings of the ACM Workshop on Blockchain, Cryptocurrencies and Contracts - BCC '17},
keywords = {blockchain,hyperledger,privacy,private blockchain,scalability,scaling},
mendeley-tags = {blockchain,scaling},
pages = {9--14},
title = {{Towards Scalable and Private Industrial Blockchains}},
url = {http://dl.acm.org/citation.cfm?doid=3055518.3055531},
year = {2017}
}
@article{Coco2017,
author = {Overview, Technical},
file = {:Users/fgoessler/Dropbox/{\_}Masterthesis/Papers/Coco Framework whitepaper.pdf:pdf},
keywords = {blockchain,scaling},
mendeley-tags = {blockchain,scaling},
title = {{The Coco Framework}},
year = {2017}
}
@article{Cachin2016,
abstract = {Overview. A blockchain is best understood in the model of state-machine replication [8], where a service maintains some state and clients invoke operations that transform the state and generate outputs. A blockchain emulates a " trusted " computing service through a distributed protocol, run by nodes con-nected over the Internet. The service represents or creates an asset, in which all nodes have some stake. The nodes share the common goal of running the service but do not necessarily trust each other for more. In a " permissionless " blockchain such as the one underlying the Bitcoin cryptocurrency, anyone can operate a node and participate through spending CPU cycles and demonstrating a " proof-of-work. " On the other hand, blockchains in the " permissioned " model control who participates in validation and in the protocol; these nodes typically have established identities and form a consortium. A report of Swanson compares the two models [9]. Hyperledger. The Hyperledger Project (www.hyperledger.org) is a collaborative effort to cre-ate an enterprise-grade, open-source distributed ledger framework and code base. It aims to advance blockchain technology by identifying and realizing a cross-industry open standard platform for dis-tributed ledgers, which can transform the way business transactions are conducted globally. Established as a project of the Linux Foundation in early 2016, the Hyperledger Project currently has more than 50 members. Hyperledger Fabric. Hyperledger Fabric (github.com/hyperledger/fabric) is an imple-mentation of a distributed ledger platform for running smart contracts, leveraging familiar and proven technologies, with a modular architecture allowing pluggable implementations of various functions. It is one of multiple projects currently in incubation under the Hyperledger Project. A developer-preview of the Hyperledger Fabric (called " v0.5-developer-preview ") has been released in June 2016 (github.com/hyperledger/fabric/wiki/Fabric-Releases). The distributed ledger protocol of the fabric is run by peers. The fabric distinguishes between two kinds of peers: A validating peer is a node on the network responsible for running consensus,},
author = {Cachin, Christian},
file = {:Users/fgoessler/Dropbox/{\_}Masterthesis/Papers/Hyperledger.pdf:pdf},
journal = {IBM Research},
keywords = {blockchain,hyperledger},
mendeley-tags = {blockchain,hyperledger},
title = {{Architecture of the hyperledger blockchain fabric}},
volume = {July},
year = {2016}
}
@article{kokoris2017omniledger,
  title={OmniLedger: A Secure, Scale-Out, Decentralized Ledger.},
  author={Kokoris-Kogias, Eleftherios and Jovanovic, Philipp and Gasser, Linus and Gailly, Nicolas and Ford, Bryan},
  journal={IACR Cryptology ePrint Archive},
  volume={2017},
  pages={406},
  year={2017}
}
@article{Malavolta2017,
abstract = {Permissionless blockchains protocols such as Bitcoin are inherently limited in transaction throughput and latency. Current efforts to address this key issue focus on off-chain payment channels that can be combined in a Payment-Channel Network (PCN) to enable an unlimited number of payments without requiring to access the blockchain other than to register the initial and final capacity of each channel. While this approach paves the way for low latency and high throughput of payments, its deployment in practice raises several privacy concerns as well as technical challenges related to the inherently concurrent nature of payments, such as race conditions and deadlocks, that have been understudied so far. In this work, we lay the foundations for privacy and concurrency in PCNs, presenting a formal def-inition in the Universal Composability framework as well as practical and provably secure enforcement solutions. In particular, we present Fulgor and Rayo. Fulgor is the first payment protocol for PCNs that provides provable privacy guarantees for PCN and is fully compatible with the Bitcoin scripting system. Nevertheless, Fulgor is a blocking protocol and therefore prone to deadlocks of concurrent payments as in currently available PCNs. Instead, Rayo is the first protocol for PCNs that enforces non-blocking progress (i.e., at least one of the concurrent payments terminates). We show through a new impossibility result that the latter property necessarily comes at the cost of weaker privacy. At the core of Fulgor and Rayo is Multi-Hop HTLC, a new smart contract, compatible with Bitcoin, that provides conditional payments while reducing running time and communication overhead with respect to previous approaches. Our performance evaluation of Fulgor and Rayo shows that a payment with 10 intermediate users takes as few as 5 seconds, thereby demonstrating their feasibility to be deployed in practice.},
author = {Malavolta, Giulio and Moreno-Sanchez, Pedro and Kate, Aniket and Maffei, Matteo and Wien, Tu and Ravi, Srivatsan},
file = {:Users/fgoessler/Dropbox/{\_}Masterthesis/Papers/paychannels.pdf:pdf},
keywords = {blockchain,payment channel,scaling},
mendeley-tags = {blockchain,payment channel,scaling},
title = {{Concurrency and Privacy with Payment-Channel Networks}},
url = {https://www.cs.purdue.edu/homes/pmorenos/public/paychannels.pdf},
year = {2017}
}
@article{Klemsa,
author = {Klems, Markus and Eberhardt, Jacob and Tai, Stefan and Steffen, H and Buchholz, Simon and Tidjani, Ahmed},
file = {:Users/fgoessler/Dropbox/{\_}Masterthesis/Papers/marketplace-long.pdf:pdf},
keywords = {blockchain,market},
mendeley-tags = {blockchain,market},
title = {{Trustless Intermediation in Blockchain-based Decentralized Service Marketplaces}}
}
@inproceedings{klems2017trustless,
  title={Trustless Intermediation in Blockchain-Based Decentralized Service Marketplaces},
  author={Klems, Markus and Eberhardt, Jacob and Tai, Stefan and Haertlein, Steffen and Buchholz, Simon and Tidjani, Ahmed},
  booktitle={International Conference on Service-Oriented Computing},
  pages={731--739},
  year={2017},
  organization={Springer}
}
@article{Eberhardt,
abstract = {The potential for blockchains to fundamentally transform how organizations produce and capture value is huge and very real. Prac-tical applications dealing with nearly any type of digital asset demon-strate this capacity. Blockchain-based application architectures benefit from a set of unique properties including immutability and transparency of cryptographically-secured and peer-recorded transactions, which have been agreed upon by network consensus. Blockchain-based applications, however, may also suffer from high computational and storage expenses, negatively impacting overall performance and scalability. In this paper, we report on lessons learned and insights gained from a set of experi-mental blockchain projects, focusing on off-chaining: How to move com-putation and data off-the-chain, without compromising the properties introduced and benefits gained by using blockchains in the first place.},
author = {Eberhardt, Jacob and Tai, Stefan},
doi = {10.1007/978-3-319-67262-5},
file = {:Users/fgoessler/Dropbox/{\_}Masterthesis/Papers/on{\_}or{\_}off{\_}the{\_}chain.pdf:pdf},
isbn = {978-3-319-67261-8},
issn = {16113349},
keywords = {blockchain,payment channel,scaling},
mendeley-tags = {blockchain,payment channel,scaling},
title = {{On or Off the Blockchain? Insights on Off-Chaining Computation and Data}},
url = {http://www.ise.tu-berlin.de/fileadmin/fg308/publications/2017/2017-eberhardt-tai-offchaining-patterns.pdf}
}
@inproceedings{eberhardt2017or,
  title={On or Off the Blockchain? Insights on Off-Chaining Computation and Data},
  author={Eberhardt, Jacob and Tai, Stefan},
  booktitle={European Conference on Service-Oriented and Cloud Computing},
  pages={3--15},
  year={2017},
  organization={Springer}
}
@article{fielding2000representational,
  title={Representational state transfer},
  author={Fielding, Roy},
  journal={Architectural Styles and the Design of Netowork-based Software Architecture},
  pages={76--85},
  year={2000}
}
